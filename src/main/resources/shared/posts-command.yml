app:
  mysql:
    host: ${env.MYSQL_HOST}
    port: ${env.MYSQL_PORT}
    user: ${env.MYSQL_USER}
    password: ${env.MYSQL_PASSWORD}
    database: ${env.MYSQL_DATABASE}
  mongodb:
    user: ${env.MONGODB_EVENT_STORE_USER}
    password: ${env.MONGODB_EVENT_STORE_PASSWORD}
    database: posts-command-db

spring:
  kafka:
    producer:
      transaction-id-prefix: tx-posts-command-
    consumer:
      enable-auto-commit: false
  data:
    mongodb:
      uri: mongodb+srv://${app.mongodb.user}:${app.mongodb.password}@clustertest.dcm8a.mongodb.net/${app.mongodb.database}?retryWrites=true&w=majority
  jpa:
    hibernate:
      ddl-auto: validate
  datasource:
    url: jdbc:mysql://${app.mysql.host}:${app.mysql.port}/${app.mysql.database}?useSSL=true&requireSSL=false
    username: ${app.mysql.user}
    password: ${app.mysql.password}
    driver-class-name: com.mysql.cj.jdbc.Driver

axon:
  serializer:
    general: jackson
    events: jackson
    messages: jackson
  axonserver:
    enabled: false
  kafka:
    clientid: posts-command-app
    producer:
      retries: 3
      bootstrap-servers: ${app.kafka.broker.host}:${app.kafka.broker.port}
      event-processor-mode: tracking
    properties:
      security.protocol: PLAINTEXT
