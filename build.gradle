plugins {
    id 'org.springframework.boot' version '2.6.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'com.microsoft.azure.azurewebapp' version '1.3.0'
    id 'com.google.cloud.tools.jib' version '3.2.0'
}

group = 'com.blabla'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2021.0.0")
    set('dockerPrefix', "geotestregistry.azurecr.io")
}

dependencies {
    implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'

    // Config server
    implementation 'org.springframework.cloud:spring-cloud-config-server'
    implementation 'org.springframework.cloud:spring-cloud-starter-stream-kafka'

    // Actuator and monitoring
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.cloud:spring-cloud-config-monitor'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

bootJar {
    destinationDirectory.set(file("$rootDir"))
    archiveFileName = "app.jar"
}

azurewebapp {
    resourceGroup = 'smartgeo-test'
    appName = 'BlaBlaConfig'
}

jib {
    from {
        image='mcr.microsoft.com/java/jre:17-zulu-alpine'
    }
    to {
        image="${dockerPrefix}/${project.name}/${project.version.toString().toLowerCase()}"
        tags=['latest']
    }
    container {
        mainClass='com.blabla.config.ConfigApplication'
        creationTime='USE_CURRENT_TIMESTAMP'
        environment=[USE_PROFILE: 'prod', PORT: '8080']
        jvmFlags = ['-Dspring.profiles.active=${USE_PROFILE}', '-Dserver.port=${PORT}', '-Dfile.encoding=UTF-8']
        ports = ['8080']
        labels = [maintainer: "JaeWang Lee <jnso5072@outlook.kr>"]
    }
}
